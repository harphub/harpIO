% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_obs.R
\name{read_obs}
\alias{read_obs}
\title{Read point observations from multiple files}
\usage{
read_obs(
  date_times,
  parameter,
  stations = NULL,
  file_path = getwd(),
  file_format = NULL,
  file_template = "vobs",
  file_format_opts = vfile_opts("vobs"),
  output_format = "obstable",
  output_format_opts = obstable_opts(),
  return_data = FALSE,
  start_date = NULL,
  end_date = NULL,
  by = "1h",
  reads_per_write = 24,
  ...
)
}
\arguments{
\item{date_times}{A vector of date time strings to read. Can be in YYYYMMDD,
YYYYMMDDhh, YYYYMMDDhhmm, or YYYYMMDDhhmmss format. Can be numeric or
character. A vector of date-times can be generated using \link{seq_dates}.
If \code{date_times} is missing or set to NULL, the date-times to read will
be generated from the \code{start_date}, \code{end_date} and \code{by}
arguments.}

\item{parameter}{The names of the parameters to read. By default this is
NULL, meaning that all parameters are read from the observations files.}

\item{stations}{The IDs of the stations to read from the files. By default
this is NULL, meaning that observations for all stations are read from the
observations files.}

\item{file_path}{The parent path to all forecast data. All file names are
generated to be under the \code{file_path} directory. The default is the
current working directory.}

\item{file_format}{The format of the files to read. By default this is
"vobs", which is the standard format used by the HIRLAM consortium. If set
to something else, \code{read_obs} will search the global environment for a
function called \code{read_<file_format>} that it will use to read from the
files.}

\item{file_template}{A template for the file names. For available built in
templates see \code{\link{show_file_templates}}. If anything else is
passed, it is returned unmodified, or with substitutions made for dynamic
values. Available substitutions are {YYYY} for year, \{MM\} for 2 digit
month with leading zero, \{M\} for month with no leading zero, and
similarly \{DD\} or \{D\} for day, \{HH\} or \{H\} for hour, \{mm\} or
\{m\} for minute. Note that the full path to the file will always be
file_path/template. Other substitutions can be passed via \code{...}}

\item{file_format_opts}{Specific options for reading the file format
specified in \code{file_format}. Should be a named list, with names
corresponding to argument for \code{read_<file_format>}.}

\item{output_format}{The file format to re-write the data to. By default this
is "obstable", which is an sqlite file desgined specifically for the harp
ecosystem. If set to something else, \code{read_obs} will search the global
environment for a function called \code{write_<file_format>} that it will
use to write to the output file(s).}

\item{output_format_opts}{Specific options for writing to \code{file_format}
files. Must be a named list and at least include the names \code{"path"}
and \code{"template"}. By setting \code{output_format_opts$path} to
something other than NULL, \code{read_obs} will attempt to write out the
data.}

\item{return_data}{Logical - whether to return the data read in to the
calling environment. Due to the potential for large volumes of data, this
is set to FALSE by default.}

\item{start_date}{If \code{date_times} is not set, the start date-time for a
sequence of dates to read. Can be in YYYYMMDD, YYYYMMDDhh, YYYYMMDDhhmm, or
YYYYMMDDhhmmss format.}

\item{end_date}{If \code{date_times} is not set, the end date-time for a
sequence of dates to read. Can be in YYYYMMDD, YYYYMMDDhh, YYYYMMDDhhmm, or
YYYYMMDDhhmmss format.}

\item{by}{If \code{date_times} is not set, the time step for a sequence of
dates to read. If numeric, it is assumed to be in hours, otherwise the the
suffixes "d", "h", "m", "s", for days, hours, minutes and seconds
respectively.}

\item{reads_per_write}{The number of files to read before writing out the
data to new files. Set this to a low number to reduce memory usage. The
default is 24 based on the assumption that there are observations files
every hour and writing should be done once per observation day. For the
default setting of writing to "obstable" files, this number has no impact
on the output since these files can be appended to. For other formats, this
setting might be important to prevent data from being overwritten.}

\item{...}{Other arguments to \code{generate_filenames} for getting the names
of files to read.}
}
\value{
If \code{return_data = TRUE}, a list with data frames of
  observations.
}
\description{
\code{read_obs} generates file names, based on the arguments given and reads
point observations data from them. The data can optionally be re-written to
files of a different format. Due to the large volumes of data that may be
read, the function will only return data to the calling environment if
\code{return_data = TRUE}
}
\details{
\code{read_obs} is not intended to be used for reading gridded observations.
For this use \link{read_analysis} instead.
}
